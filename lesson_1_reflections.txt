[Feb 20 2016]
Q - How did viewing a diff between two versions of a file help you see the
bug that was introduced?

A - First: if a bug was introduced, this was due to a CHANGE somewhere. If
I reduce the radius of the entire file to the changes only, there is
the highest chance to find the error among the changes. Moreover,
being the changed lines put one aside the other and highlighted, it is
easier that a trivial typo is highlighted as well.

Q - How could having easy access to the entire history of a file make you
a more efficient programmer in the long term?

A - Not actually in the long term, but in the short term for sure. It
depends on the frequences of the changes, not on the absolute time.

Q - What do you think are the pros and cons of manually choosing when
to create a commit, like you do in Git, vs having versions
automatically saved, like Google Docs does?

A - Very simple: an automatic save could even save a large deletion
that wasn't supposed to be intentional.

Q - Why do you think some version control systems, like Git, allow
saving multiple files in one commit, while others, like Google Docs,
treat each file separately?

A - Because Git is definitely dedicated to software development,
Google Docs not.

Q - How can you use the commands git log and git diff to view the
history of files?

A - 'git log' to know the ID and datum of changes, 'git diff' for the
actual changes in the code, providing the IDs found out with 'git
log'.

Q - How might using version control make you more confident to make
changes that could break something?

A - Because of the feature called 'checkout' (different from the one
with the same name in Subversion): with 'git checkout <ID>' you can
seamlessly switch to any snapshot of your code, back and forth.

Q - Now that you have your workspace set up, what do you want to try
using Git for?

A - For our company's internal information architecture.

